# üß™ JSONs para Teste no Postman

## üìù 1. REGISTRO DE USU√ÅRIO
**M√©todo:** POST  
**URL:** `http://localhost:777/api/auth/register`  
**Headers:** `Content-Type: application/json`

```json
{
  "nome_completo": "Jo√£o Silva Santos",
  "email": "joao.silva@email.com",
  "telefone": "(11) 99999-9999",
  "cpf": "12345678901",
  "senha": "123456"
}
```

---

## üîê 2. LOGIN DE USU√ÅRIO
**M√©todo:** POST  
**URL:** `http://localhost:777/api/auth/login`  
**Headers:** `Content-Type: application/json`

```json
{
  "email": "joao.silva@email.com",
  "senha": "123456"
}
```

---

## üë§ 3. BUSCAR PERFIL (PROTEGIDO)
**M√©todo:** GET  
**URL:** `http://localhost:777/api/auth/profile`  
**Headers:** 
- `Content-Type: application/json`
- `Authorization: Bearer SEU_TOKEN_AQUI`

*Sem body - apenas headers*

---

## üè• 4. HEALTH CHECK
**M√©todo:** GET  
**URL:** `http://localhost:777/api/health`  
**Headers:** `Content-Type: application/json`

*Sem body - apenas para testar se o servidor est√° funcionando*

---

## üìã INSTRU√á√ïES DE TESTE:

### Passo 1: Teste o Health Check
- Fa√ßa uma requisi√ß√£o GET para `/api/health`
- Deve retornar status 200 com mensagem de sucesso

### Passo 2: Registre um usu√°rio
- Use o JSON de registro acima
- Deve retornar status 201 com token JWT
- **COPIE O TOKEN** da resposta

### Passo 3: Teste o Login
- Use o JSON de login acima
- Deve retornar status 200 com token JWT
- **COPIE O TOKEN** da resposta

### Passo 4: Teste o Perfil
- Use o token copiado no header Authorization
- Deve retornar status 200 com dados do usu√°rio

---

## ‚ö†Ô∏è VALIDA√á√ïES IMPORTANTES:

### Email:
- Deve ser um email v√°lido
- Deve ser √∫nico (n√£o pode repetir)

### Telefone:
- Formato: `(11) 99999-9999`
- Exemplo v√°lido: `(11) 98765-4321`

### CPF:
- Deve ter exatamente 11 d√≠gitos
- Deve ser √∫nico (n√£o pode repetir)
- Exemplo v√°lido: `12345678901`

### Senha:
- M√≠nimo 6 caracteres
- Exemplo v√°lido: `123456`

### Nome:
- M√≠nimo 2 caracteres
- M√°ximo 100 caracteres
- Exemplo v√°lido: `Jo√£o Silva Santos`

---

## üîß CONFIGURA√á√ÉO DO POSTMAN:

1. **Crie uma Collection** chamada "Boleto Pago API"
2. **Configure a Base URL:** `http://localhost:777/api`
3. **Adicione as requisi√ß√µes** com os JSONs acima
4. **Para o perfil**, configure o token JWT nas vari√°veis da collection

### Vari√°veis da Collection:
- `base_url`: `http://localhost:777/api`
- `token`: `SEU_TOKEN_AQUI` (ser√° preenchido automaticamente)

---

## üöÄ EXECUTAR O SERVIDOR:

```bash
npm run dev
```

O servidor deve iniciar na porta 777 e mostrar:
```
üöÄ Servidor rodando na porta 777
üì° Ambiente: development
üåê CORS Origin: https://boleto-pago-azul.lovable.app
```
